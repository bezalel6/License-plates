{"version":3,"sources":["LinkedList.ts","logic.ts","App.tsx","hooks.js","reportWebVitals.ts","index.tsx"],"names":["ListNode","data","next","prev","this","newArr","tN","found0","ret","calc","newArrIndex","operation","num","tArr","a","splice","b","length","calcRes","operatingOn","currentCalc","push","LinkedList","head","_head","other","tH","console","log","rec","arr","i","element","res","didFind0","pop","undefined","Error","minus","calcOperation","plus","combineList","getClosestTo0","list","min","Math","abs","tNN","defRet","tempArr","storeOgNum","tempCalc","clear","App","useState","setCalc","callback","initialState","values","setValues","onChange","event","target","name","value","onSubmit","preventDefault","useForm","items","str","body","createNumArr","printTree","forEach","item","className","Form","noValidate","Field","Input","placeholder","Button","type","color","style","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69dd24de.chunk.js","sourcesContent":["export type RecCall = {\r\n  num: number;\r\n  operatingOn: number;\r\n  newArr: number[];\r\n  newArrIndex: number;\r\n  operation: \"leaf\" | \"plus\" | \"minus\";\r\n};\r\n\r\nexport class ListNode {\r\n  data: RecCall;\r\n  next: ListNode | null;\r\n  prev: ListNode | null;\r\n  constructor(\r\n    data: RecCall,\r\n    next: ListNode | null = null,\r\n    prev: ListNode | null = null\r\n  ) {\r\n    this.data = data;\r\n    this.next = next;\r\n    this.prev = prev;\r\n    if (data.newArr) {\r\n      data.newArr = [...data.newArr];\r\n    }\r\n  }\r\n\r\n  printTree(): [] {\r\n    let tN: ListNode = this;\r\n    let found0: boolean = false;\r\n    const ret: any = [];\r\n    while (tN != null && !found0 && tN.next) {\r\n      let calc = \"\";\r\n      let newArr: number[] = [];\r\n      if (tN.data.newArr) newArr = [...tN.data.newArr];\r\n      const newArrIndex = tN.data.newArrIndex ? tN.data.newArrIndex : 0;\r\n      if (tN.data.operation === \"leaf\" && tN.data.num === 0) found0 = true;\r\n      calc +=\r\n        tN.data.num +\r\n        (tN.data.operation === \"plus\"\r\n          ? \"+\"\r\n          : tN.data.operation === \"leaf\"\r\n          ? \"#\"\r\n          : \"-\");\r\n      const tArr: number[] = [...newArr];\r\n      let a = newArr.splice(0, newArrIndex) + \",\";\r\n      newArr = tArr;\r\n      let b = \",\" + newArr.splice(newArrIndex + 1, newArr.length);\r\n      newArr = tArr;\r\n      a = a === \",\" ? \"\" : a;\r\n      b = b === \",\" ? \"\" : b;\r\n      let calcRes = +tN.data.num;\r\n      if (tN.data.operation === \"plus\") calcRes += +tN.data.operatingOn;\r\n      else if (tN.data.operation === \"minus\") calcRes -= +tN.data.operatingOn;\r\n      const currentCalc =\r\n        \"[\" + a + calc + tN.data.operatingOn + \"=\" + calcRes + b + \"]\";\r\n      ret.push(currentCalc);\r\n      // console.log(\r\n      //   \"[\" + a + calc + tN.data.operatingOn + \"=\" + calcRes + b + \"]\"\r\n      // );\r\n      // console.log(\r\n      //   \"%cLinkedList.ts line:25 tN.data.newArr\",\r\n      //   \"color: #007acc;\",\r\n      //   tN.data.newArr\r\n      // );\r\n      tN = tN.next;\r\n    }\r\n    return ret;\r\n  }\r\n}\r\nexport class LinkedList {\r\n  private _head: ListNode | null;\r\n  length: number;\r\n  constructor(head: ListNode) {\r\n    this._head = head;\r\n    this.length = 1;\r\n  }\r\n  public get head() {\r\n    if (this._head && this._head.prev != null) {\r\n      let tN: ListNode = this._head.prev;\r\n      while (tN.prev != null) tN = tN.prev;\r\n      return tN;\r\n    }\r\n    return this._head;\r\n  }\r\n  combineList(other: LinkedList) {\r\n    if (this.head === null) {\r\n      this._head = other.head;\r\n      this.length = other.length;\r\n      return;\r\n    }\r\n    this.length += other.length;\r\n    const tH = other.head;\r\n\r\n    other._head = this.head;\r\n    let tN = this.head;\r\n    while (tN !== null && tN.next !== null) {\r\n      tN = tN.next;\r\n    }\r\n    tN.next = tH;\r\n    if (tH) tH.prev = tN;\r\n  }\r\n  clear() {\r\n    this._head = null;\r\n    this.length = 0;\r\n  }\r\n  printList() {\r\n    let tN = this.head;\r\n    let calc: string = \"\";\r\n    while (tN !== null && tN.next !== null) {\r\n      const newArr = [...tN.data.newArr];\r\n      const newArrIndex = tN.data.newArrIndex;\r\n      calc +=\r\n        tN.data.num +\r\n        (tN.data.operation === \"plus\"\r\n          ? \"+\"\r\n          : tN.data.operation === \"leaf\"\r\n          ? \"=\"\r\n          : \"-\");\r\n      const a = newArr.splice(0, newArrIndex + 1);\r\n      const b = newArr.splice(newArrIndex + 2, newArr.length);\r\n      const calcRes = newArr[newArrIndex];\r\n      console.log(\"[ \" + a + \",\" + calc + calcRes + \",\" + b + \"]\");\r\n\r\n      tN = tN.next;\r\n    }\r\n    //     let prnt: string = \"[\";\r\n    //     if (this.head.data.newArr)\r\n    //       for (let i = 0; i < this.head.data.newArr.length; i++) {\r\n    //         const isLastIndex = i === this.head.data.newArrIndex - 1 ? true : false;\r\n    //         const cell = this.head.data.newArr[i];\r\n    //         if (i === this.head.data.newArrIndex) {\r\n    //           prnt += calc;\r\n    //         }\r\n    //         prnt += +cell;\r\n    //         console.log(\" \" + prnt + \" \" + (isLastIndex ? \"]\" : \",\"));\r\n    //       }\r\n  }\r\n}\r\n","import { LinkedList, ListNode } from \"./LinkedList\";\r\n\r\nfunction createNumArr(str: string): number[] {\r\n  const ret: number[] = [];\r\n  for (let i = 0; i < str.length; i++) {\r\n    const element = str[i];\r\n    ret.push(+element);\r\n  }\r\n  return ret;\r\n}\r\nfunction rec(arr: number[]): LinkedList {\r\n  if (arr.length === 1) {\r\n    return new LinkedList(\r\n      new ListNode({\r\n        num: arr[0],\r\n        operation: \"leaf\",\r\n        newArr: arr,\r\n        newArrIndex: 0,\r\n        operatingOn: arr[0],\r\n      })\r\n    );\r\n  }\r\n  if (arr.length >= 2) {\r\n    for (let i = 0; i < arr.length - 1; i++) {\r\n      const element = arr[i];\r\n      const tArr = [...arr];\r\n      tArr.splice(i, 1);\r\n      tArr[i] += element * 10;\r\n      const res = rec(tArr);\r\n      if (didFind0(res)) {\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n  const num = arr.pop();\r\n  if (num === undefined) throw new Error(\"arr pop return undefined\");\r\n  let minus: LinkedList | undefined = calcOperation(arr, num, \"minus\");\r\n  let plus: LinkedList | undefined = calcOperation(arr, num, \"plus\");\r\n  if (plus === undefined || minus === undefined) {\r\n    throw new Error();\r\n  }\r\n  plus.combineList(minus);\r\n  return plus;\r\n}\r\nexport function calcLicensePlate(str: string): ListNode | false {\r\n  const result = rec(createNumArr(str));\r\n  const found = didFind0(result);\r\n  return found;\r\n}\r\n\r\nfunction getClosestTo0(list: LinkedList): number {\r\n  if (!list || list.length === 0) return 1000;\r\n  let tN: ListNode | null = list.head;\r\n  if (!tN) throw new Error();\r\n  let min = tN.data.num;\r\n  while (tN !== null && tN.data) {\r\n    if (Math.abs(tN.data.num) < Math.abs(min)) min = tN.data.num;\r\n\r\n    tN = tN.next;\r\n  }\r\n  return min;\r\n}\r\nfunction didFind0(list: LinkedList): ListNode | false {\r\n  let tN: ListNode | null = list.head;\r\n  if (!tN) return false;\r\n  while (tN !== null && tN.data) {\r\n    if (tN.data.operation === \"leaf\" && tN.data.num === 0) {\r\n      let tNN: ListNode = tN;\r\n      while (tNN.prev != null) tNN = tNN.prev;\r\n      return tNN;\r\n    }\r\n    tN = tN.next;\r\n  }\r\n  return false;\r\n}\r\nfunction calcOperation(\r\n  arr: number[],\r\n  num: number,\r\n  operation: \"plus\" | \"minus\"\r\n): LinkedList | undefined {\r\n  let defRet;\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const tempArr = [...arr];\r\n    const storeOgNum = tempArr[i];\r\n    tempArr[i] += operation === \"minus\" ? -num : num;\r\n    const tempCalc: LinkedList = new LinkedList(\r\n      new ListNode({\r\n        num,\r\n        operation,\r\n        newArr: tempArr,\r\n        newArrIndex: i,\r\n        operatingOn: storeOgNum,\r\n      })\r\n    );\r\n    tempCalc.combineList(rec(tempArr));\r\n    if (didFind0(tempCalc)) {\r\n      return tempCalc;\r\n    }\r\n    if (!defRet || getClosestTo0(defRet) > getClosestTo0(tempCalc)) {\r\n      defRet = tempCalc;\r\n    }\r\n    tempCalc.clear();\r\n  }\r\n  return defRet;\r\n}\r\n","import { useState } from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useForm } from \"./hooks\";\nimport { calcLicensePlate } from \"./logic\";\n\nexport default function App() {\n  const [calc, setCalc] = useState<any>(false);\n  const { values, onChange, onSubmit } = useForm(callback, {});\n  function callback() {\n    const items: any[] = [];\n    console.log(\"%cApp.tsx line:10 values\", \"color: #007acc;\", values);\n    const list = calcLicensePlate((values as any).body as string);\n    if (list) {\n      list.printTree().forEach((item) => {\n        items.push(<li key={item}>{item}</li>);\n      });\n    }\n\n    setCalc(<ul className=\"list\">{items}</ul>);\n  }\n  return (\n    <div className=\"form-container\">\n      <Form onSubmit={onSubmit} noValidate>\n        <Form.Field>\n          <Form.Input\n            placeholder=\"hi world!\"\n            name=\"body\"\n            onChange={onChange}\n\n            // error={error ? true : false}\n          />\n          <Button type=\"submit\" color=\"teal\">\n            Submit\n          </Button>\n        </Form.Field>\n      </Form>\n      {calc && (\n        <div style={{ marginBottom: 20 }}>\n          {calc}\n          {/* {\n            <ul>\n              {calc.forEach((element: {} | null | undefined) => {\n                <li>{element}</li>;\n              })}\n            </ul>\n          } */}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (callback: () => void, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const onChange = (event: { target: { name: any, value: any } }) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event: { preventDefault: () => void }) => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    onChange,\r\n    onSubmit,\r\n    values,\r\n  };\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}